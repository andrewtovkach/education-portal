@model StatisticsViewModel

@{
    ViewData["Title"] = $"Статистика по тесту {Model.TestName}";
    ViewData["ActivePage"] = "Statistics";
}

@{ var title = $"Статистика по тесту {Model.TestName}"; }

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Courses" asp-action="Index">Курсы</a></li>
        <li class="breadcrumb-item" aria-current="page"><a asp-controller="Courses" asp-action="Details" asp-route-id="@ViewBag.CourseId">Курс @ViewBag.CourseName</a></li>
        <li class="breadcrumb-item" aria-current="page"><a asp-controller="Courses" asp-action="Details" asp-route-id="@ViewBag.CourseId" asp-route-moduleId="@ViewBag.ModuleId">Модуль @ViewBag.ModuleName</a></li>
        <li class="breadcrumb-item" aria-current="page"><a asp-controller="Tests" asp-action="Info" asp-route-id="@Model.TestId">Тест @Model.TestName</a></li>
        <li class="breadcrumb-item active" aria-current="page">Статистика по тесту @Model.TestName</li>
    </ol>
</nav>

<div class="page-header">
    <h1>Статистика по тесту @Model.TestName</h1>
    <hr />
</div>

<div class="row">
    <div class="col-md-3">
        @Html.Partial("_TestsNav", new TestCompletionNavViewModel
   {
        TestId = Model.TestId,
        TestName = Model.TestName
   })
    </div>
    <div class="col-md-9">
        <div class="row">
            <div id="container"></div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(function () {
            var names = [];

            @foreach (var name in Model.Names)
            {
                @:names.push('@name');
            }

            var data = [];

            @foreach (var chartValue in Model.ChartValues)
            {
                @:data.push({ y: @chartValue.Y, name: '@chartValue.Name' });
            }

            Highcharts.chart('container', {
                chart: {
                    type: 'bar',
                },
                legend: {
                    enabled: true,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    labelFormatter: function () {
                        return this.name + " - <span class='total'>" + this.y + "</span>"
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: names,
                    allowDecimals: false
                },
                yAxis: {
                    title: {
                        text: ''
                    },
                    allowDecimals: false
                },
                plotOptions: {
                    series: {
                        events: {
                            legendItemClick: function (x) {
                                var i = this.index - 1;
                                var series = this.chart.series[0];
                                var point = series.points[i];

                                if (point.oldY == undefined)
                                    point.oldY = point.y;

                                point.update({ y: point.y != null ? null : point.oldY });
                            }
                        }
                    }
                },
                legend: {
                    labelFormatter: function () {
                        return names[this.index - 1];
                    }
                },
                series: [
                    {
                        pointWidth: 20,
                        showInLegend: false,
                        data: data
                    }
                ]
            });
        });
    </script>
}